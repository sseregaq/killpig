import pygame
import sys
import random
import time

# Ініціалізація Pygame
pygame.init()

# Встановлення розміру вікна
WIDTH, HEIGHT = 1920, 1800
win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Вбий комуняку")

# Завантаження фонового зображення
background_img = pygame.image.load("D:\\Загрузки\\msk4.webp")
background_img = pygame.transform.scale(background_img, (WIDTH, HEIGHT))

# Завантаження та зменшення зображення свині
pig_img = pygame.image.load("D:\\Загрузки\\scale_1200.jfif")
pig_img = pygame.transform.scale(pig_img, (100, 100))  # Зменшення в 2 рази

# Фонова музика
pygame.mixer.music.load("D:\\Загрузки\\zenya4.mp3")
pygame.mixer.music.set_volume(0.5)
pygame.mixer.music.play(-1)  # Зациклювання фонової музики

# Звук вбивання свині
kill_sound = pygame.mixer.Sound("D:\\Загрузки\\svin.mp3")

# Початкові координати свині
pig_x = random.randint(50, WIDTH - 50)
pig_y = random.randint(50, HEIGHT - 50)

# Лічильник вбитих свиней
total_killed = 0

# Стани гри
MENU = 0
GAME = 1
SETTINGS = 2
RESULTS = 3
state = MENU

# Шрифти
font = pygame.font.Font(None, 36)
large_font = pygame.font.Font(None, 48)

# Параметри таймера
start_time = None
game_duration = 10  # Тривалість гри в секундах

# Параметри повзунка гучності
volume = 0.5
volume_slider_rect = pygame.Rect(WIDTH - 120, HEIGHT - 40, 100, 20)
dragging_volume_slider = False

# Функція малювання головного меню
def draw_menu():
    win.blit(background_img, (0, 0))
    title_text = large_font.render("Вбий комуняку", True, (0, 0, 0))  # Чорний колір тексту
    start_text = font.render("Натисніть пробіл, щоб розпочати гру", True, (0, 0, 0))  # Чорний колір тексту
    settings_text = font.render("Натисніть S для налаштувань", True, (0, 0, 0))
    draw_text_with_background(title_text, (WIDTH // 2 - title_text.get_width() // 2, HEIGHT // 2 - title_text.get_height() - 50), (255, 255, 0))
    draw_text_with_background(start_text, (WIDTH // 2 - start_text.get_width() // 2, HEIGHT // 2), (255, 255, 0))
    draw_text_with_background(settings_text, (WIDTH // 2 - settings_text.get_width() // 2, HEIGHT // 2 + 50), (255, 255, 0))
    draw_volume_slider()

# Функція малювання гри
def draw_game():
    win.blit(background_img, (0, 0))
    win.blit(pig_img, (pig_x, pig_y))

# Функція малювання результатів
def draw_results():
    win.blit(background_img, (0, 0))
    total_text = large_font.render(f"Вбито свиней: {total_killed}", True, (0, 0, 0))  # Чорний колір тексту
    draw_text_with_background(total_text, (WIDTH // 2 - total_text.get_width() // 2, HEIGHT // 2 - 50), (255, 0, 0))
    exit_text = font.render("Вихід", True, (0, 0, 0))  # Чорний колір тексту
    draw_text_with_background(exit_text, (WIDTH // 2 - exit_text.get_width() // 2, HEIGHT // 2 + 100), (255, 255, 0))  # Жовтий колір фону

# Функція малювання налаштувань
def draw_settings():
    win.blit(background_img, (0, 0))
    settings_text = large_font.render("Налаштування", True, (0, 0, 0))
    draw_text_with_background(settings_text, (WIDTH // 2 - settings_text.get_width() // 2, HEIGHT // 2 - 200),
    (255, 255, 0))
    draw_text_with_background(font.render("Розмір свині", True, (0, 0, 0)), (WIDTH // 2 - 100, HEIGHT // 2 - 100), (255, 255, 0))
    draw_text_with_background(font.render("Розмір екрану", True, (0, 0, 0)), (WIDTH // 2 - 100, HEIGHT // 2), (255, 255, 0))
    draw_text_with_background(font.render("Тривалість гри", True, (0, 0, 0)), (WIDTH // 2 - 100, HEIGHT // 2 + 100), (255, 255, 0))
    draw_text_with_background(font.render("Назад", True, (0, 0, 0)), (WIDTH // 2 - 100, HEIGHT // 2 + 200), (255, 255, 0))
    draw_volume_slider()

# Функція малювання тексту з фоном
def draw_text_with_background(text, pos, bg_color):
    text_rect = text.get_rect(topleft=pos)
    text_surface = pygame.Surface((text_rect.width + 20, text_rect.height + 20), pygame.SRCALPHA)
    pygame.draw.rect(text_surface, bg_color, text_surface.get_rect(), border_radius=10)
    win.blit(text_surface, (pos[0] - 10, pos[1] - 10))
    win.blit(text, (pos[0] + 10, pos[1]))

# Функція малювання повзунка гучності
def draw_volume_slider():
    pygame.draw.rect(win, (255, 255, 0), volume_slider_rect)
    pygame.draw.rect(win, (0, 0, 0), volume_slider_rect, 2)
    volume_slider_handle_rect = pygame.Rect(int(WIDTH - 120 + volume * 100), HEIGHT - 40, 20, 20)
    pygame.draw.rect(win, (255, 255, 0), volume_slider_handle_rect)

# Основний цикл гри
run = True
while run:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        elif event.type == pygame.KEYDOWN:
            if state == MENU:
                if event.key == pygame.K_SPACE:
                    state = GAME
                    start_time = time.time()
                elif event.key == pygame.K_s:
                    state = SETTINGS
            elif state == RESULTS:
                if event.key == pygame.K_RETURN:
                    state = MENU
                    total_killed = 0
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if state == GAME:
                if event.button == 1:  # Лівий клік миші
                    if pig_x <= event.pos[0] <= pig_x + pig_img.get_width() and pig_y <= event.pos[1] <= pig_y + pig_img.get_height():
                        total_killed += 1
                        kill_sound.play()  # Програвання звуку вбивання свині
                        pig_x = random.randint(50, WIDTH - 50)
                        pig_y = random.randint(50, HEIGHT - 50)
            elif state == MENU:
                if volume_slider_rect.collidepoint(event.pos):  # Перевірка, чи курсор миші на повзунку гучності
                    dragging_volume_slider = True  # Почати тягнення повзунка гучності
                elif event.button == 1 and (WIDTH // 2 - 100 <= event.pos[0] <= WIDTH // 2 + 100):
                    if HEIGHT // 2 - 100 <= event.pos[1] <= HEIGHT // 2 - 60:  # Розмір свині
                        pass  # Реалізуйте зміну розміру свині тут
                    elif HEIGHT // 2 - 50 <= event.pos[1] <= HEIGHT // 2 + 40:  # Розмір екрану
                        pass  # Реалізуйте зміну розміру екрану тут
                    elif HEIGHT // 2 + 100 <= event.pos[1] <= HEIGHT // 2 + 140:  # Тривалість гри
                        pass  # Реалізуйте зміну тривалості гри тут
                    elif HEIGHT // 2 + 200 <= event.pos[1] <= HEIGHT // 2 + 240:  # Назад
                        state = MENU
            elif state == SETTINGS:
                if volume_slider_rect.collidepoint(event.pos):  # Перевірка, чи курсор миші на повзунку гучності
                    dragging_volume_slider = True  # Почати тягнення повзунка гучності
                elif event.button == 1 and (WIDTH // 2 - 100 <= event.pos[0] <= WIDTH // 2 + 100):
                    if HEIGHT // 2 - 100 <= event.pos[1] <= HEIGHT // 2 - 60:  # Розмір свині
                        pass  # Реалізуйте зміну розміру свині тут
                    elif HEIGHT // 2 - 50 <= event.pos[1] <= HEIGHT // 2 + 40:  # Розмір екрану
                        pass  # Реалізуйте зміну розміру екрану тут
                    elif HEIGHT // 2 + 100 <= event.pos[1] <= HEIGHT // 2 + 140:  # Тривалість гри
                        pass  # Реалізуйте зміну тривалості гри тут
                    elif HEIGHT // 2 + 200 <= event.pos[1] <= HEIGHT // 2 + 240:  # Назад
                        state = MENU
            elif state == RESULTS:
                if volume_slider_rect.collidepoint(event.pos):  # Перевірка, чи курсор миші на повзунку гучності
                    dragging_volume_slider = True  # Почати тягнення повзунка гучності
        elif event.type == pygame.MOUSEBUTTONUP:
            if event.button == 1:  # Лівий клік миші
                dragging_volume_slider = False  # Зупинити тягнення повзунка гучно
        if state == MENU:
            draw_menu()
        elif state == GAME:
            draw_game()
            # Відображення таймеру
            if start_time is not None:
                timer_text = font.render(f"Час: {int(time_left)}", True, (255, 255, 0))
                win.blit(timer_text, (10, 10))
        elif state == SETTINGS:
            draw_settings()
        elif state == RESULTS:
            draw_results()

    pygame.display.update()

pygame.quit()
sys.exit()
